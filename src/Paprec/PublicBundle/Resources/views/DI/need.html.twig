{% extends "@PaprecPublic/Common/Base/base_need.html.twig" %}

{#{% block title %}#}

{#{% endblock %}#}

{#{% block stylesheets %}#}

{#{% endblock %}#}

{% block sidebar %}
    {# Définition des menus affichés dans la sidebar #}
    {% set besoin = 'active' %}
    {% set coordonnees = '' %}
    {% set offre = '' %}
    {{ parent() }}
{% endblock %}

{# FIN step categories et products #}
{# DEBUT affichage des contenants #}
{% block products_panel %}
    {% if cart.displayedCategories %}
        {{ parent() }}

    {% endif %}
{% endblock %}

{% block product_step_title %}
    {{ 'Public.Cart.MyContainers'|trans }}
{% endblock %}

{% block products %}
    {% for category in categories %}
        {# pour chaque catégorie, si elle fait partie des displayedCategories
        alors lui ouvre son step_wrapper #}
        {% if category.id in cart.displayedCategories %}
            {% set countProductsInCategory = 0 %}
            {% for items in cart.content %}
                {% if items['cId'] == category.id %}
                    {% set countProductsInCategory = countProductsInCategory + 1 %}
                {% endif %}
            {% endfor %}
            <div class="step__wrappertop open"
                 id="productsWrapper_{{ category.id }}">
                {{ category.name }}
                {% if countProductsInCategory > 1 %}
                    <span>{{ countProductsInCategory }} contenants séléctionnés</span>
                {% endif %}
                {% if countProductsInCategory ==     1 %}
                    <span>{{ countProductsInCategory }} contenant séléctionné</span>
                {% endif %}
            </div>
            {% for key, products in productsCategories %}
                {# pour chaque productCategory (categoryId => Products[],
                 on affiche le tableau de produits si ils font partie de la catégorie courante #}
                {% if key == category.id %}
                    {% set cpt = 5 %}
                    {# On instantie la variable qui va prendre le produit à afficher#}
                    {% set displayedProduct = "" %}
                    {% for product in products %}
                        {% if (cpt%5 == 0) %}
                            <div class="first-row">
                        {% endif %}
                        {% if product.id in cart.displayedProducts and category.id in cart.displayedProducts|keys %}
                            {% set displayedProduct = product %}
                        {% endif %}
                        <div class="checkboxPicto productCheckboxPicto {% if product.id in cart.displayedProducts and category.id in cart.displayedProducts|keys %}  active {% endif %}"
                             id="productCheckboxPicto_{{ product.id }}_{{ category.id }}"
                             style="{% if product.pictos| length > 0 %}background-image: url({{ asset('/uploads/pictos/' ~ product.pictos[0].path) }}) {% endif %}">
                            {{ product.name }}
                            <br>{{ product.capacity|nl2br }}{{ product.capacityUnit }}
                            {% for items in cart.content %}
                                {% if items['cId'] == category.id and items['pId'] == product.id %}
                                    <span class="number">{{ items['qtty'] }}</span>
                                {% endif %}
                            {% endfor %}

                        </div>
                        {% set cpt = cpt + 1 %}

                        {% if ((cpt%5 == 0) and (cpt > 5)) or loop.last %}
                            </div>
                            {% if cart.displayedProducts and displayedProduct != '' %}
                                <div class="infoproduct">
                                    <div class="left">
                                        <img src="{% if displayedProduct.pilotPictures|length > 0 %}{{ asset('/uploads/pictos/' ~ displayedProduct.pilotPictures[0].path) }}{% endif %}"
                                             alt="#" class="mainpicture">
                                        <br>
                                        {% if displayedProduct.getPicturesPictures() %}
                                            {% for picture in displayedProduct.getPicturesPictures() %}
                                                <img src="{{ asset('/uploads/pictos/' ~ picture.path) }}"
                                                     class="thumb"
                                                     alt="#">
                                            {% endfor %}
                                        {% endif %}

                                    </div>
                                    <div class="right">
                                        <div class="infoproduct__close"
                                             data-url="{{ path('paprec_public_corp_di_subscription_addOrRemoveDisplayedProduct', {cartUuid: cart.id, categoryId: 'categoryTmp', productId: 'productTmp'}) }}"
                                             id="infoProductClose_{{ displayedProduct.id }}_{{ category.id }}"></div>
                                        <div class="infoproduct__title">
                                            {{ displayedProduct.name }}
                                        </div>
                                        <div class="infoproduct__desc">
                                            {{ displayedProduct.description|nl2br }}
                                        </div>
                                        {% for argument in displayedProduct.arguments|slice(0, 2) %}
                                            <div class="{% if loop.index == 1 %}infoproduct__satisfaction{% elseif loop.index == 2 %}infoproduct__tri{% endif %}">
                                                {{ argument.description|nl2br }}
                                            </div>
                                        {% endfor %}
                                        <div class="clearfix"></div>
                                        <div class="infoproduct__disclamer">
                                            Forfait recyclage clé en
                                            <main></main>
                                        </div>
                                        <div class="infoproduct__dimensiontitle">{{ 'Public.Cart.Dimensions'|trans }}</div>
                                        <div class="infoproduct__dimension">
                                            {{ displayedProduct.dimensions|nl2br }}
                                        </div>

                                        {% set qtty = '' %}
                                        {% for items in cart.content %}
                                            {% if items['cId'] == category.id and items['pId'] == displayedProduct.id %}
                                                {% set qtty = items['qtty'] %}
                                            {% endif %}
                                        {% endfor %}
                                        <div class="infoproduct__qtytitle">{{ 'Public.Cart.Qtty'|trans }}</div>

                                        <select name=""
                                                id="quantityProducSelect_{{ displayedProduct.id }}_{{ category.id }}"
                                                class="infoproduct__qty">
                                            {% for i in 1..10 %}
                                                {% if i == qtty %}
                                                    <option value="{{ i }}"
                                                            selected="selected">{{ i }}</option>
                                                {% else %}
                                                    <option value="{{ i }}">{{ i }}</option>

                                                {% endif %}
                                            {% endfor %}
                                        </select>
                                        <div class="button button--lightgreen addToCartSubmitButton"
                                             id="addToCartSubmitButton_{{ displayedProduct.id }}_{{ category.id }}">{{ 'Public.Cart.AddToCartQuote'|trans }}
                                        </div>

                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                {% set displayedProduct = '' %}
                            {% endif %}
                            <div class="clearfix"></div>
                        {% endif %}
                    {% endfor %}
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endfor %}
{% endblock %}

{% block cta_bottom_panel %}
    <div class="step">
        {{ render(controller('PaprecPublicBundle:Common:getCTAsBottom', {
            'label': 'ValidateNeed',
            'cartUuid': cart.id,
            'division': cart.division,
            'stepBack': '',
            'nextStep': 'step2',
            'idSubmit': ''
        })) }}
    </div>
{% endblock %}


{% block javascripts %}
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?libraries=places&key={{ paprec_google_api_key }}">
    </script>
    <script>
        $(function () {

            reloadCart();
            loadedPage();
            reloadNearbyAgencies();

            function initializeAutocomplete(id) {
                var element = document.getElementById(id);
                var options = {
                    types: ['(regions)'],
                    componentRestrictions: {country: "fr"}
                };
                if (element) {
                    var autocomplete = new google.maps.places.Autocomplete(element, options);
                    google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
                }
            }

            // Fonction appelée lorsque l'on choisit une proposition de l'autocomplete Google
            function onPlaceChanged() {
                var loc = $('#locationSelect').val();
                // On init les variables car si un champ manque, on se retrouve avec city/%20/long dans l'url et non city//long
                var place = this.getPlace();
                var city = " ";
                var postalCode = " ";
                var long = " ";
                var lat = " ";
                lat = place.geometry.location.lat();
                long = place.geometry.location.lng();
                for (var i in place.address_components) {
                    var component = place.address_components[i];
                    for (var j in component.types) {  // Some types are ["country", "political"]
                        if (component.types[j] === 'postal_code') {
                            postalCode = component.long_name;
                        }
                        if (component.types[j] === 'locality') {
                            city = component.long_name;
                        }
                    }
                }
                {% autoescape'js' %}
                url = "{{ path('paprec_public_corp_home_addLocation', {cartUuid: cart.id, location: 'locationTmp', city: 'cityTmp', postalCode: 'postalCodeTmp', long: 'longTmp', lat:'latTmp' }) }}"
                    .replace('locationTmp', loc)
                    .replace('cityTmp', city)
                    .replace('postalCodeTmp', postalCode)
                    .replace('longTmp', long)
                    .replace('latTmp', lat);
                {% endautoescape %}
                $(location).attr('href', url);
            }

            // google.maps.event.addDomListener(window, 'load', function () {
            // Si l'on met ce listener, l'autocomplete est initialisé 1fois/1000
            initializeAutocomplete('locationSelect');

            {# Quand on sélectionne une division dans le select, on recharge en envoyant la location et la division #}
            $("#divisionSelect").on('change', function () {
                {% autoescape'js' %}
                url = $(this).data('url').replace('divisionTmp', this.value);
                {% endautoescape %}

                $(location).attr('href', url);
            });

            {# Quand on sélectionne une frequence dans les radioButtons, on recharge la page en envoyant la location, division, frequence#}
            {# cela na nous faire naviguer vers le SubscriptionController de la division choisie #}
            $('#frequencyRadioBox').change(function () {
                frequency = $("input[name='frequencyRadio']:checked").val();
                {% autoescape'js' %}
                url = $(this).data('url').replace('frequencyTmp', frequency);
                {% endautoescape %}
                $(location).attr('href', url);

            });

            // Au chargement, on applique au body la couleur de la division DI
            function loadedPage() {
                $('body').addClass('tunnel--green');

            }

            // Au clic sur une catégorie, on l'ajoute où on la supprime des displayedCategories du cart
            $('.categoryCheckboxPicto').click(function () {
                categoryId = (this.id).replace('categoryCheckboxPicto_', '');
                url = $(this).data('url').replace('categoryTmp', categoryId);
                $(location).attr('href', url);
            });

            // Au clic sur la croix de l'infoproduct, on supprime le produit des displayedProduct
            $('.productCheckboxPicto').click(function () {
                //on récupère la fin de l'id contenant : productId_categoryId et on met chaque id dans une case d'un tableau
                productCategory = (this.id).replace('productCheckboxPicto_', '').split('_', 2);
                productId = productCategory[0];
                categoryId = productCategory[1];
                addOrRemoveDisplayedProduct(productId, categoryId);
            });

            function addOrRemoveDisplayedProduct(productId, categoryId) {
                {% autoescape'js' %}
                url = "{{ path('paprec_public_corp_di_subscription_addOrRemoveDisplayedProduct', {cartUuid: cart.id, categoryId: 'categoryTmp', productId: 'productTmp'}) }}"
                    .replace('categoryTmp', categoryId)
                    .replace('productTmp', productId);
                $(location).attr('href', url);
                {% endautoescape %}
            }

            // Au clic sur une catégorie, on l'ajoute où on la supprime des displayedCategories du cart
            $('.infoproduct__close').click(function () {
                //on récupère la fin de l'id contenant : productId_categoryId et on met chaque id dans une case d'un tableau
                productCategory = (this.id).replace('infoProductClose_', '').split('_', 2);
                productId = productCategory[0];
                categoryId = productCategory[1];
                addOrRemoveDisplayedProduct(productId, categoryId);
            });

            // Au clic sur un wrapper, on l'affiche ou on le cache
            $('.step__wrappertop').click(function () {
                if ($('.step__wrappertop').hasClass('open')) {
                    $('.step__wrappertop').removeClass('open')
                } else {
                    $('.step__wrappertop').addClass('open');
                }
            });

            $('.addToCartSubmitButton').click(function () {
                productCategory = (this.id).replace('addToCartSubmitButton_', '').split('_', 2);
                productId = productCategory[0];
                categoryId = productCategory[1];
                qtty = $('#quantityProducSelect_' + productId + '_' + categoryId).val();
                $.ajax({
                    type: "POST",
                    url: "{{ path('paprec_public_corp_di_subscription_addContent', {cartUuid: cart.id, categoryId: 'categoryTmp', productId: 'productTmp', quantity: 'quantityTmp'}) }}"
                        .replace('categoryTmp', categoryId)
                        .replace('productTmp', productId)
                        .replace('quantityTmp', qtty),
                    success: function (response) {
                        // Quand on ajoute un produit au devis, on referme l'affichage des infos du produit ajouté
                        // addOrRemoveDisplayedProduct(productId, categoryId);
                        removeBadge(productId, categoryId);
                        $('#productCheckboxPicto_' + productId + '_' + categoryId).prepend("<span class=\"number\">" + qtty + "<span");
                        reloadCart()
                    },
                    error: function (errorThrown) {
                        console.log(errorThrown);
                    }
                });
            });

            function removeBadge(productId, categoryId) {
                $('#productCheckboxPicto_' + productId + '_' + categoryId).find('span.number').remove();
            }

            // Rechargement de l'HTML du Cart
            function reloadCart() {
                $.ajax({
                    type: "GET",
                    url: "{{ path('paprec_public_corp_di_subscription_loadCart', {cartUuid: cart.id}) }}",
                    contentType: "html",
                    success: function (response) {
                        // On récupère l'HTML du cart dans "Mon besoin" et on l'insère dans loadedCartPanel dans la sidebar
                        var htmlToDisplay = response.trim();
                        $("#loadedCartPanel").html(htmlToDisplay);
                        // On ajoute un listener sur les "x" dans la liste des produits dans le Cart
                        $(".buttonDeleteProduct").click(function () {
                            productCategory = (this.id).replace('buttonDeleteProduct_', '').split('_', 2);
                            productId = productCategory[0];
                            categoryId = productCategory[1];
                            $.ajax({
                                type: "GET",
                                dataType: "json",
                                url: "{{ path('paprec_public_corp_di_subscription_removeContent', {cartUuid: cart.id, categoryId: 'categoryTmp', productId: 'productTmp'}) }}"
                                    .replace('categoryTmp', categoryId)
                                    .replace('productTmp', productId),
                                success: function (response) {
                                    removeBadge(productId, categoryId);
                                    reloadCart();
                                },
                                error: function (errorThrown) {
                                    console.log(errorThrown);
                                }
                            });
                        })
                    },
                    error: function (errorThrown) {
                        console.log(errorThrown);
                    }
                });
            }

            // Récupération du nombre d'agences proches
            function reloadNearbyAgencies() {
                $.ajax({
                    type: "GET",
                    url: "{{ path('paprec_public_corp_di_subscription_loadNearbyAgencies', {cartUuid: cart.id}) }}",
                    contentType: "html",
                    success: function (response) {
                        // On récupère l'HTML du cart dans "Mon besoin" et on l'insère dans loadedCartPanel dans la sidebar
                        var htmlToDisplay = response.trim();
                        $(".step__agency").html(htmlToDisplay);
                    },
                    error: function (errorThrown) {
                        console.log(errorThrown);
                    }
                });
            }
        });
    </script>

{% endblock %}