{% extends "@PaprecPublic/Common/Base/base_index.html.twig" %}

{% block sidebar %}
    {# Définition des menus affichés dans la sidebar #}
    {% set besoin = 'active' %}
    {% set confirmation = '' %}
    {{ parent() }}
{% endblock %}

{% block main_content_index %}
    <div class="step">
        <div class="step__left">
            <div class="step__title">Je suis</div>
        </div>
        <div class="step__right step__right--small">
            {{ form_widget(form.businessName, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.ProductDIQuote.BusinessName'|trans}}) }}
            {{ form_errors(form.businessName) }}

            {{ form_widget(form.civility, {'attr': {'class': 'input--radio'}}) }}
            {{ form_errors(form.civility) }}

            <div class="clearfix step--marginfield"></div>

            {{ form_widget(form.lastName, {'attr': {'class': 'input input--mid step--marginfield', 'placeholder': 'Commercial.QuoteRequest.LastName'|trans}}) }}
            {{ form_errors(form.lastName) }}
            {{ form_widget(form.firstName, {'attr': {'class': 'input input--mid step--marginfield', 'placeholder': 'Commercial.QuoteRequest.FirstName'|trans}}) }}
            {{ form_errors(form.firstName) }}

            {{ form_widget(form.email, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.Email'|trans}}) }}
            {{ form_errors(form.email) }}

            {{ form_widget(form.phone, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.PhonePlaceholder'|trans}}) }}
            {{ form_errors(form.phone) }}

            {{ form_widget(form.function, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.FunctionPlaceholder'|trans}}) }}
            {{ form_errors(form.function) }}

            <div class="clearfix"></div>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="step">
        <div class="step__left">
            <div class="step__title">Mon besoin</div>
        </div>
        <div class="step__right step__right--small">
            {{ form_widget(form.need, {'attr': {'class': 'input input--full input--bordered', 'placeholder': 'Commercial.QuoteRequest.NeedPlaceholder'|trans}}) }}
            {{ form_errors(form.need) }}
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="step">
        <div class="notice">Afin de mieux appréhender votre demande, vous pouvez si vous le souhaitez nous
            fournir des photos (.jpg, .png, .tiff)
            ou autres fichiers (.pdf, .doc, .xls)
        </div>
        <div id="listFiles">

        </div>
        {{ form_label(form.attachedFiles, "TÉLÉCHARGER DES PIÈCES JOINTES OU DES PHOTOS", {'label_attr': {'class': 'button button--bordered'}}) }}
        {{ form_widget(form.attachedFiles, {'attr': {'class': 'input-file'}}) }}

        <div class="clearfix"></div>

        <a href="javascript:void(0);" id="regularFormSubmitButton" class="button button--green">
            {{ ('Public.Cart.SendNeed'|trans)|upper }}
        </a>
    </div>
    {{ form_rest(form) }}
{% endblock %}

{% block javascripts %}
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?libraries=places&key={{ paprec_google_api_key }}">
    </script>
    <script>
        $(function () {
            reloadNearbyAgencies();
            loadedPage();

            function loadedPage() {
                division = $("#divisionSelect").val();
                if (division === 'DI') {
                    $('body').addClass('tunnel--green');
                } else if (division === 'CHANTIER') {
                    $('body').addClass('tunnel--orange');
                } else {
                    $('body').addClass('tunnel--purple');
                }
            }


            $('#regularFormSubmitButton').on('click', function () {
                form = $('form');
                form.attr('action', '#');
                form.attr('method', 'post');
                form.attr('enctype', 'multipart/form-data');
                form.submit();
            });

            function initializeAutocomplete(id) {
                var element = document.getElementById(id);
                var options = {
                    types: ['(regions)'],
                    componentRestrictions: {country: "fr"}
                };
                if (element) {
                    var autocomplete = new google.maps.places.Autocomplete(element, options);
                    google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
                }
            }

            // Fonction appelée lorsque l'on choisit une proposition de l'autocomplete Google
            function onPlaceChanged() {
                var loc = $('#locationSelect').val();
                // On init les variables car si un champ manque, on se retrouve avec city/%20/long dans l'url et non city//long
                var place = this.getPlace();
                var city = " ";
                var postalCode = " ";
                var long = " ";
                var lat = " ";
                lat = place.geometry.location.lat();
                long = place.geometry.location.lng();
                for (var i in place.address_components) {
                    var component = place.address_components[i];
                    for (var j in component.types) {  // Some types are ["country", "political"]
                        if (component.types[j] === 'postal_code') {
                            postalCode = component.long_name;
                        }
                        if (component.types[j] === 'locality') {
                            city = component.long_name;
                        }
                    }
                }
                {% autoescape'js' %}
                url = "{{ path('paprec_public_corp_home_addLocation', {cartUuid: cart.id, location: 'locationTmp', city: 'cityTmp', postalCode: 'postalCodeTmp', long: 'longTmp', lat:'latTmp' }) }}"
                    .replace('locationTmp', loc)
                    .replace('cityTmp', city)
                    .replace('postalCodeTmp', postalCode)
                    .replace('longTmp', long)
                    .replace('latTmp', lat);
                {% endautoescape %}
                $(location).attr('href', url);
            }

            // google.maps.event.addDomListener(window, 'load', function () {
            // Si l'on met ce listener, l'autocomplete est initialisé 1fois/1000
            initializeAutocomplete('locationSelect');


            {# Quand on sélectionne une division dans le select, on recharge en envoyant la location et la division #}
            $("#divisionSelect").on('change', function () {
                {% autoescape'js' %}
                url = $(this).data('url').replace('divisionTmp', this.value);
                {% endautoescape %}

                $(location).attr('href', url);
            });

            {# Quand on sélectionne une frequence dans les radioButtons, on recharge la page en envoyant la location, division, frequence#}
            {# cela na nous faire naviguer vers le SubscriptionController de la division choisie #}
            $('#frequencyRadioBox').change(function () {
                frequency = $("input[name='frequencyRadio']:checked").val();
                {% autoescape'js' %}
                url = $(this).data('url').replace('frequencyTmp', frequency);
                {% endautoescape %}
                $(location).attr('href', url);

            });

            $('#paprec_commercialbundle_quoteRequestNonCorporate_attachedFiles').on('change', function () {
                html = "";

                for (var i = 0; i < this.files.length; i++) {
                    var lastModified = new Date(this.files[i].lastModified);
                    html += this.files[i].name + " " + new Intl.DateTimeFormat('en-GB').format(lastModified) + " <a href=\"#\">x</a><br>";
                    $('#listFiles').html(html);
                }

            });

            function reloadNearbyAgencies() {
                url = $('.step__agency').data('url');
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        // On récupère l'HTML du cart dans "Mon besoin" et on l'insère dans loadedCartPanel dans la sidebar
                        var htmlToDisplay = response.trim();
                        $(".step__agency").html(htmlToDisplay);
                    },
                    error: function (errorThrown) {
                        console.log(errorThrown);
                    }
                });
            }

        });
    </script>

{% endblock %}