{% extends "::base_public.html.twig" %}

{#{% block title %}#}

{#{% endblock %}#}

{#{% block stylesheets %}#}

{#{% endblock %}#}

{% block main_content %}
    <!-- section -->
    <section>
        <div class="wrapper">
            <div class="sidebar">
                <div class="recap active">
                    <div class="recap__step">
                        <span class="recap__stepNumber">01</span>Mon besoin
                    </div>
                </div>

                <div class="recap">
                    <div class="recap__step">
                        <span class="recap__stepNumber">02</span>Ma confirmation
                    </div>

                </div>

            </div>
            <form id="regularForm" action="#" class="main" method="post" enctype="multipart/form-data">
                <div class="step">
                    <div class="step__left">
                        <div class="step__title">{{ 'Public.Home.Location'|trans }}</div>
                    </div>
                    <div class="step__right">
                        <input class="input" type="text"
                               id="locationSelect" autocomplete="off">
                        {{ form_errors(form.postalCode) }}

                    </div>
                </div>
                <div class="step">
                    <div class="step__left">
                        <div class="step__title">Je suis</div>
                    </div>
                    <div class="step__right step__right--small">
                        {{ form_widget(form.businessName, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.ProductDIQuote.BusinessName'|trans}}) }}
                        {{ form_errors(form.businessName) }}

                        {{ form_widget(form.civility, {'attr': {'class': 'input--radio'}}) }}
                        {{ form_errors(form.civility) }}

                        <div class="clearfix step--marginfield"></div>

                        {{ form_widget(form.lastName, {'attr': {'class': 'input input--mid step--marginfield', 'placeholder': 'Commercial.QuoteRequest.LastName'|trans}}) }}
                        {{ form_errors(form.lastName) }}
                        {{ form_widget(form.firstName, {'attr': {'class': 'input input--mid step--marginfield', 'placeholder': 'Commercial.QuoteRequest.FirstName'|trans}}) }}
                        {{ form_errors(form.firstName) }}

                        {{ form_widget(form.email, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.Email'|trans}}) }}
                        {{ form_errors(form.email) }}

                        {{ form_widget(form.phone, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.PhonePlaceholder'|trans}}) }}
                        {{ form_errors(form.phone) }}

                        {{ form_widget(form.function, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequest.FunctionPlaceholder'|trans}}) }}
                        {{ form_errors(form.function) }}

                        <div class="clearfix"></div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="step">
                    <div class="step__left">
                        <div class="step__title">Mon besoin</div>
                    </div>
                    <div class="step__right step__right--small">

                        {{ form_widget(form.locationsNumber, {'attr': {'class': 'input input--full step--marginfield', 'placeholder': 'Commercial.QuoteRequestNonCorporate.LocationsNumber'|trans}}) }}
                        {{ form_errors(form.locationsNumber) }}

                        {{ form_widget(form.need, {'attr': {'class': 'input input--full input--bordered', 'placeholder': 'Commercial.QuoteRequest.NeedPlaceholder'|trans}}) }}
                        {{ form_errors(form.need) }}
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="step">
                    <div class="notice">Afin de mieux appréhender votre demande, vous pouvez si vous le souhaitez nous
                        fournir des photos (.jpg, .png, .tiff)
                        ou autres fichiers (.pdf, .doc, .xls)
                    </div>
                    <div id="listFiles">

                    </div>
                    {{ form_label(form.attachedFiles, "TÉLÉCHARGER DES PIÈCES JOINTES OU DES PHOTOS", {'label_attr': {'class': 'button button--bordered'}}) }}
                    {{ form_widget(form.attachedFiles, {'attr': {'class': 'input-file'}}) }}

                    <div class="clearfix"></div>

                    <a href="javascript:void(0);" id="groupFormSubmitButton" class="button button--green">
                        ENVOYER VOTRE BESOIN
                    </a>
                </div>
                {{ form_rest(form) }}

            </form>
        </div>


        <div class="clearfix"></div>
    </section>
    <!-- /section -->
{% endblock %}

{% block javascripts %}
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?libraries=places&key={{ paprec_google_api_key }}">
    </script>
    <script>
        $(function () {
            function initializeAutocomplete(id) {
                var element = document.getElementById(id);
                var options = {
                    types: ['(regions)'],
                    componentRestrictions: {country: "fr"}
                };
                if (element) {
                    var autocomplete = new google.maps.places.Autocomplete(element, options);
                    google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
                }
            }

            // Fonction appelée lorsque l'on choisit une proposition de l'autocomplete Google
            function onPlaceChanged() {
                var place = this.getPlace()
                for (var i in place.address_components) {
                    var component = place.address_components[i];
                    for (var j in component.types) {  // Some types are ["country", "political"]
                        if (component.types[j] === 'postal_code') {
                            $('#paprec_commercialbundle_quoteRequestNonCorporate_postalCode').val(component.long_name);
                        }
                    }
                }
            }

            // google.maps.event.addDomListener(window, 'load', function () {
            // Si l'on met ce listener, l'autocomplete est initialisé 1fois/1000
            initializeAutocomplete('locationSelect');

            $('#groupFormSubmitButton').on('click', function () {
                $('#regularForm').submit();
            });

            $('#paprec_commercialbundle_quoteRequestNonCorporate_attachedFiles').on('change', function() {
                html = "";

                for (var i = 0; i < this.files.length; i++) {
                    var lastModified = new Date(this.files[i].lastModified);
                    html += this.files[i].name + " " + new Intl.DateTimeFormat('en-GB').format(lastModified) + " <a href=\"#\">x</a><br>";
                    $('#listFiles').html(html);
                }

            });

        });
    </script>

{% endblock %}